---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';

export interface Props {
	title: string;
	description: string;
	image?: string;
}

// Importieren der Astro-Seiten-URL
const { url } = Astro;
const baseURL = new URL(Astro.site ?? 'https://www.maillard.dev');

const lang = url.pathname.startsWith('/en') ? 'en' : 'de'; // Falls die Seite auf Englisch ist
const cleanPath = url.pathname.replace(/^\/en/, '').replace(/^\/de/, ''); // Entfernen von '/en' und '/de'

const canonicalURL = lang === 'de'
  ? new URL(cleanPath, baseURL).toString()  // F端r Deutsch, keine Sprachkennung
  : new URL(`/en${cleanPath}`, baseURL).toString(); // F端r Englisch mit '/en'

// old canonicalURL
//const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const resolvedImageWithDomain = new URL("/opengraph.jpg", Astro.site).toString();
const { title, description, image } = Astro.props;
---
<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" href={new URL('/favicon/favicon.svg', Astro.site).toString()} type="image/svg+xml">
<link rel="apple-touch-icon" sizes="180x180" href={new URL('/favicon/apple-touch-icon.png', Astro.site).toString()}>
<link rel="manifest" href={new URL('/favicon/site.webmanifest', Astro.site).toString()}>
<meta name="apple-mobile-web-app-title" content="maillard.dev" >

<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title="Blog Feed (Deutsch)"
	href="/rss.de.xml"
/>
<link
	rel="alternate"
	type="application/rss+xml"
	title="Blog Feed (English)"
	href="en/rss.en.xml"
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/playfair-display-v30-latin-800.woff2" as="font" type="font/woff2" crossorigin>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Alternativen Links f端r hreflang -->
<link rel="alternate" href={new URL(`${cleanPath}`, baseURL).toString()} hreflang="de" />
<link rel="alternate" href={new URL(`/en${cleanPath}`, baseURL).toString()} hreflang="en" />

<!-- Fallback-Link f端r x-default -->
<link rel="alternate" href={new URL(cleanPath, baseURL).toString()} hreflang="x-default" />


<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={image ? new URL(image, Astro.url).toString() : resolvedImageWithDomain} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={image ? new URL(image, Astro.url).toString() : resolvedImageWithDomain} />


<script>
	(() => {
		document.addEventListener("DOMContentLoaded", () => {

			const shim = document.querySelector(".js-header-desktop-shim")
			if(shim){

				var observer = new IntersectionObserver(function(entries) {
					if(entries[0].intersectionRatio === 0)
						document.querySelector(".header")?.classList.add("lg:border-b-2","lg:py-4");
					else if(entries[0].intersectionRatio === 1)
						document.querySelector(".header")?.classList.remove("lg:border-b-2","lg:py-4");
				}, { threshold: [0,1] });
				
				observer.observe(shim);
			}
		})
	})()
</script>
