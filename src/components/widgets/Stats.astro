---
interface Item {
    subtitle?: string,
    name: string;
    value: string;
}

export interface Props {
    items?: Array<Item>;
}

const {
    items = [],
} = Astro.props;
---

<section class="stats py-4 md:py-8">
    <ol class="stats__bars grid md:grid-cols-2 gap-2 md:gap-4 list-inside">
        {
            items.map(({ name, subtitle, value }) => (
                <li class="relative md:px-12 fade-in">
                    <div class="lg:mb-2 !font-normal text-1xl md:text-2xl !lg:text-3xl " data-progress={value}>
                        {subtitle && (<span class="!font-leadFont">{subtitle}</span><br />)}
                        {name}
                    </div>
                </li>
            ))
        }
    </ol>
</section>


<style>
    .stats {
		--color-fog-600: hsl(225, 2%, 45%);
	}

    @media (min-width: 768px) { 
        .stats__bars {
            counter-reset: ctr;
        }

        .stats__bars li::before {
            color: var(--color-fog-600);
            font-family: "leadFont", system-ui !important;
            display: block;
            content: counter(ctr, decimal-leading-zero) ".";
            counter-increment: ctr;
            font-weight: 400;
            letter-spacing: .1em;
            position: absolute;
            top: 5px;
            left: 0;
        }
    }
</style>


<script>
    import { observeFadeIn } from '@/scripts/scroll-observer.js';
    document.addEventListener('DOMContentLoaded', () => {
        observeFadeIn('.fade-in');
    });
</script>