---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';

export interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
const resolvedImageWithDomain = new URL("/opengraph.jpg", Astro.site).toString();
const { title, description, image } = Astro.props;
const makeTitle = title ? title + " - " + "Michel Maillard" : "Michel Maillard - Elevate your digital presence";
---
<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" href="favicon/favicon.ico" sizes="any">
<link rel="icon" href="favicon/favicon.svg" type="image/svg+xml">
<link rel="apple-touch-icon" sizes="180x180" href="favicon/apple-touch-icon.png">
<link rel="manifest" href="favicon/site.webmanifest">
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={title}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/playfair-display-v30-latin-800.woff2" as="font" type="font/woff2" crossorigin>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={image ? new URL(image, Astro.url).toString() : resolvedImageWithDomain} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={image ? new URL(image, Astro.url).toString() : resolvedImageWithDomain} />


<script>
	(() => {
		document.addEventListener("DOMContentLoaded", () => {

			const shim = document.querySelector(".js-header-desktop-shim")
			if(shim){

				var observer = new IntersectionObserver(function(entries) {
					if(entries[0].intersectionRatio === 0)
						document.querySelector(".header")?.classList.add("lg:border-b-2","lg:py-4");
					else if(entries[0].intersectionRatio === 1)
						document.querySelector(".header")?.classList.remove("lg:border-b-2","lg:py-4");
				}, { threshold: [0,1] });
				
				observer.observe(shim);
			}
		})
	})()
</script>
